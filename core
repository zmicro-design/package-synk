#!/bin/bash

install() {
  # prepare vars
  local name="$PACKAGE_CORE_NAME"

  log::info "[$(timestamp)][package][$name] preparing ..."

  # get system os/arch
  local arch="$PACKAGE_OS_ARCH"
  local kernel="$PACKAGE_OS_KERNEL"
  local platform="$PACKAGE_OS_PLATFORM"
  # usr_bin_dir
  local usr_bin_dir="$PACKAGE_USER_BIN_DIR"
  local tmp_dir="$PACKAGE_TMP_DIR"

  # files
  local tmp_file="$name"
  local bin_file="$tmp_file"

  case $platform in
    darwin)
      case $arch in
        arm64 | amd64)
          download_name=${name}
          ;;
        *)
        log::error "[$(timestamp)] unsupport arch: $arch"
          ;;
      esac
      ;;
    linux)
      case $arch in
        arm64)
          download_name=${name}-arm64
          ;;
        amd64)
          download_name=$name
          ;;
        *)
        log::error "[$(timestamp)] unsupport arch: $arch"
          ;;
      esac
      ;;
    *)
      log::error "[$(timestamp)] unsupport platform: $platform"
      ;;
  esac

  # prepare context
  cd $tmp_dir

  # reference: https://github.com/snyk/cli/releases
  # example:
  #   https://github.com/snyk/cli/releases/download/v1.1082.0/snyk-for-docker-desktop-darwin-arm64.tar.gz
  #   https://github.com/snyk/cli/releases/download/v1.1082.0/snyk-for-docker-desktop-darwin-x64.tar.gz
  #   https://github.com/snyk/cli/releases/download/v1.1082.0/snyk-macos
  #   https://github.com/snyk/cli/releases/download/v1.1082.0/snyk-linux
  #   https://github.com/snyk/cli/releases/download/v1.1082.0/snyk-linux-arm64
  #   
  # generate url
  local url="${PACKAGE_CORE_RELEASE_DOWNLOAD}/$PACKAGE_CORE_VERSION/${download_name}"
  log::debug "[$(timestamp)][package][$name][$kernel][$arch] url: $url, file: ${tmp_file}, tmp_dir: $tmp_dir"

  # download
  log::info "[$(timestamp)][package][$name] downloading ..."
  os::download $tmp_file $url

  # # extract
  # log::info "[$(timestamp)][package][$name] extracting ..."
  # os::extract $tmp_file

  # install
  log::info "[$(timestamp)][package][$name] installing ..."
  os::install $bin_file $usr_bin_dir

# Complex like maven-mvnd
#   # make executable
#   log::info "[$(timestamp)][package][$name] making executable ..."
#   chmod 755 $bin_file

#   # install
#   if [ -d "$usr_lib_dir/${name}" ]; then
#     log::info "[$(timestamp)][package][$name] removing old lib ..."
#     sudo rm -rf $usr_lib_dir/${name}
#   fi
#   log::info "[$(timestamp)][package][$name] installing lib ..."
#   sudo mv $lib_dir $usr_lib_dir/${name}

#   # install
#   log::info "[$(timestamp)][package][$name] installing bin ..."
#   sudo ln -sf $usr_lib_dir/${name}/bin/${PACKAGE_CORE_BIN_NAME} $usr_bin_dir/${PACKAGE_CORE_BIN_NAME}

#   # profile
#   log::success "[$(timestamp)][package][$name] config MVND_HOME=$usr_lib_dir/${name} to global env file ..."
#   local envs=$(
#     cat <<-END
# export MVND_HOME=$usr_lib_dir/${name}
# END
# )
#   config::profile "# ZMICRO PACKAGE MAVEN-MVND" "$envs"

  # clean
  log::info "[$(timestamp)][package][$name] cleaning ..."
  rm -rf $tmp_dir
}

export -f install
